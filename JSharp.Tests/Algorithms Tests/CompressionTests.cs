using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using JSharp.Models.Services;
using JSharp.UI.Views;

namespace JSharp_Tests.Algorithms_Tests
{
    public class CompressionTests
    {
        [Theory]
        [InlineData(new byte[] { }, new byte[] { })] // Empty array
        [InlineData(new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00 },
            new byte[] { 0xFF, 0x04, 0x00, 0x05 })]
        [InlineData(new byte[] { 0x01 },
            new byte[] { 0x01, 0x01 })]
        [InlineData(new byte[] { 0x55, 0x55, 0x55, 0x55 },
            new byte[] { 0x55, 0x04 })]
        [InlineData(new byte[] { 0x00, 0x00, 0x00, 0x00 },
            new byte[] { 0x00, 0x04 })]
        [InlineData(new byte[] { 0xAA, 0xAA, 0xAA, 0xBB, 0xBB, 0xBB, 0xAA },
            new byte[] { 0xAA, 0x03, 0xBB, 0x03, 0xAA, 0x01 })]
        [InlineData(new byte[] { 0x01, 0x02, 0x03, 0x04, 0x05 },
            new byte[] { 0x01, 0x01, 0x02, 0x01, 0x03, 0x01, 0x04, 0x01, 0x05, 0x01 })]
        [InlineData(new byte[] { 0xFF, 0x00, 0xFF, 0x00, 0xFF },
            new byte[] { 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x01 })]
        [InlineData(new byte[] { 0x01, 0x01, 0x01, 0x01, 0x01 },
            new byte[] { 0x01, 0x05 })]
        [InlineData(new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00 },
            new byte[] { 0x00, 0x05 })]
        [InlineData(new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x55, 0x55, 0x55, 0x55,
                0xAA, 0xAA, 0xAA, 0xBB, 0xBB, 0xBB, 0xAA,
                0x01, 0x02, 0x03, 0x04, 0x05,
                0xFF, 0x00, 0xFF, 0x00, 0xFF },
            new byte[] { 0xFF, 0x04, 0x00, 0x05,
                0x55, 0x04,
                0xAA, 0x03, 0xBB, 0x03, 0xAA, 0x01,
                0x01, 0x01, 0x02, 0x01, 0x03, 0x01, 0x04, 0x01, 0x05, 0x01,
                0xFF, 0x01, 0x00, 0x01, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x01 })]

        public void TestCompression(byte[] imageData, byte[] expectedCompressed)
        {
            List<byte> compressedData = CompressionCore.CompressRle(imageData);

            Assert.Equal(expectedCompressed, compressedData);
        }
    }
}
